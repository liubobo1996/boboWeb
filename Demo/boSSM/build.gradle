// 当前项目构建的配置文件

// 加入插件
plugins {
    id 'java'
    // 替换 gradle 内置依赖管理, 使用 spring 项目本身的 maven 依赖文件
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    // 自动打包成 war 包
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'war'
    id 'idea'
}

group = 'boGroup'
// 发布第一个版本
//version = '1.0'
version = '0.0.1-SNAPSHOT'
// Linux 服务器上的 JDK 版本
sourceCompatibility = '11'

// 编译输出显示中文
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

// 加入 Maven 仓库
repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    maven { url 'https://maven.aliyun.com/repository/central' }
    mavenLocal()
    mavenCentral()
}

configurations {
    // 编译后热更新配置
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

// 加入依赖和第三方库 点击右上角小象图标更新
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-aop:2.1.7.RELEASE'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.70'
    compile 'org.springframework.boot:spring-boot-starter-freemarker'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'mysql:mysql-connector-java:8.0.17'
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
    // 运行时需要, 代码不直接 import tomcat, 但需要跑在 tomcat 上
    // 就可内置一个 tomcat, 这样 java -jar xxx.war 就能用内置 tomcat 跑项目
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    // 编译后热更新
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // 测试才需要的依赖，打包成 war 的时候不需要
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// 让 idea 的输出目录和 gradle 一致, 这样 idea 运行的时候就能利用 gradle 的编译, 加速编译和运行速度
idea{
    module{
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}

// --------------修改配置后点击小象图标更新--------------